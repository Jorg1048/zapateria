/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.repair;

import datos.Cliente;
import datos.Reparacion;
import datos.Ticket;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import negocios.ReparacionesBL;
import negocios.TicketsBL;
import ui.JAppmain_ui;
import ui.ticket.JPrintTicket;

/**
 *
 * @author REBOOTSYSTEM
 */
public class jListRepairClient extends javax.swing.JInternalFrame {

    private Cliente cliente = null;
    public JAppmain_ui app = null;
    private Integer clienteId;
    private int reparacionId = 0;
    private Reparacion reparacion = null;
    private final Ticket ticket = new Ticket();

    /**
     * Creates new form jListRepairClient
     *
     * @param cliente
     * @param app
     */
    public jListRepairClient(Cliente cliente, JAppmain_ui app) {

        this.cliente = cliente;
        this.app = app;
        initComponents();
        // Llena los datos del cliente
        fillClient();
        fillTableRepairs();
        disableButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtIdentificacion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombreCompletos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnChangeStatus = new javax.swing.JButton();
        btnCreateTicket = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnRefresh = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRepairs = new javax.swing.JTable();

        setClosable(true);
        setTitle("Reparaciones para el Cliente");
        setToolTipText("");

        jLabel2.setText("IdentificaciÃ³n:");

        txtIdentificacion.setEditable(false);

        jLabel3.setText("Nombres Cliente");

        txtNombreCompletos.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCompletos))
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombreCompletos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Reparaciones para el Cliente");
        jLabel1.setToolTipText("Listado de las reparaciones del cliente");

        jToolBar1.setRollover(true);

        btnChangeStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/shuffle24.png"))); // NOI18N
        btnChangeStatus.setText("Cambiar Estado");
        btnChangeStatus.setFocusable(false);
        btnChangeStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChangeStatus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnChangeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeStatusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnChangeStatus);

        btnCreateTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/invoice24.png"))); // NOI18N
        btnCreateTicket.setText("Ticketear");
        btnCreateTicket.setFocusable(false);
        btnCreateTicket.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCreateTicket.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCreateTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTicketActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCreateTicket);
        jToolBar1.add(jSeparator1);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/refresh_24.png"))); // NOI18N
        btnRefresh.setText("Actualizar");
        btnRefresh.setFocusable(false);
        btnRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jToolBar1.add(btnRefresh);
        jToolBar1.add(jSeparator2);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/cancel_24.png"))); // NOI18N
        btnClose.setText("Cerrar");
        btnClose.setToolTipText("Cierra el formulario");
        btnClose.setFocusable(false);
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnClose);

        tblRepairs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRepairs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRepairsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRepairs);
        if (tblRepairs.getColumnModel().getColumnCount() > 0) {
            tblRepairs.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Cierra el formulario
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void tblRepairsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRepairsMouseClicked
        int row = this.tblRepairs.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una fila");
            disableButtons();
        } else {
            reparacionId = (int) this.tblRepairs.getValueAt(row, 0);
            enabledButtons();
        }
    }//GEN-LAST:event_tblRepairsMouseClicked

    private void btnChangeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeStatusActionPerformed
        // Cambiar estado de la reparacion

        // Si hay seleccionado una linea de las reparaciones muestre el formulario
        if (reparacionId != 0) {
            // Mostrar formulario de cambio de estado
            reparacion = ReparacionesBL.findById(reparacionId);
            String estado = reparacion.getEstado();

            if (estado.equals("Facturado")) {
                JOptionPane.showMessageDialog(rootPane, "No se puede cambiar el estado de una reparaciÃ³n facturada.\n"
                        + " Solo puede anular el ticket y pasa a estado terminado para volver a facturar");
            } else {
                JRepairChangeStatus changeStatus = new JRepairChangeStatus(reparacion);
                this.app.dskMain.add(changeStatus);
                Dimension desktopSize = this.app.dskMain.getSize();
                Dimension FrameSize = changeStatus.getSize();
                changeStatus.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                changeStatus.show();
            }
        }

    }//GEN-LAST:event_btnChangeStatusActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // actualiza el listado
        fillTableRepairs();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCreateTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTicketActionPerformed

        // Factura una reparacion
        // Cuando esto pasa, el estado de la reparacion cambia a Facturado
        // y se genera un ticket de la reparaciÃ³n
        if (reparacionId != 0) {
            reparacion = ReparacionesBL.findById(reparacionId);

            String estado = reparacion.getEstado();

            try {

                if ("Facturado".equals(estado)) {
                    int result = JOptionPane.showConfirmDialog(rootPane, "Ya existe un ticket para esta reparaciÃ³n, Desea Verlo?", "Ver Ticket", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == 0) {
                        JPrintTicket printTicket = new JPrintTicket(reparacion);
                        this.app.dskMain.add(printTicket);
                        Dimension desktopSize = this.app.dskMain.getSize();
                        Dimension FrameSize = printTicket.getSize();
                        printTicket.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                        printTicket.show();
                    }
                } else {
                    int result = JOptionPane.showConfirmDialog(rootPane, "Desea facturar la reparaciÃ³n al cliente?", "Generar Ticket", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == 0) {

                        // busca la informaciÃ³n de la reparaciÃ³n
                        String date = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(new Date());

                        // Guarda los datos en el objeto ticket
                        ticket.setFecha(date);
                        ticket.setClienteID(cliente.getId());
                        ticket.setUsuarioID(this.app.user.getId());
                        ticket.setReparacionID(reparacionId);
                        ticket.setValorTotal(reparacion.getValor());

                        // Se crea el ticket
                        TicketsBL.create(ticket);

                        // Se actualiza el estado de la reparaciÃ³n
                        // Tener en cuenta que este estado no puede ser cambiado
                        ReparacionesBL.updateStatus("Facturado", reparacion.getId());

                        fillTableRepairs();
                        printTickets();
                        disableButtons();
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnCreateTicketActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeStatus;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCreateTicket;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblRepairs;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtNombreCompletos;
    // End of variables declaration//GEN-END:variables

    /**
     * Llena los datos del cliente
     */
    private void fillClient() {
        txtIdentificacion.setText(this.cliente.getIdentificacion());
        txtNombreCompletos.setText(cliente.getNombreCompleto());
    }

    /**
     * Llena la tabla con las reparaciones del cliente
     */
    private void fillTableRepairs() {
        try {

            DefaultTableModel modelRepairs;

            modelRepairs = ReparacionesBL.listarReparacionesCliente(this.cliente.getId());
            this.tblRepairs.setModel(modelRepairs);
            TableColumnModel columnModel = tblRepairs.getColumnModel();

            columnModel.getColumn(0).setWidth(0);
            columnModel.getColumn(0).setPreferredWidth(0);
            columnModel.getColumn(1).setPreferredWidth(150);
            columnModel.getColumn(2).setPreferredWidth(200);
            columnModel.getColumn(3).setPreferredWidth(50);
            columnModel.getColumn(4).setPreferredWidth(50);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al cargar la lista de reparaciones " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void disableButtons() {
        btnChangeStatus.setEnabled(false);
        btnCreateTicket.setEnabled(false);

    }

    private void enabledButtons() {
        btnChangeStatus.setEnabled(true);
        btnCreateTicket.setEnabled(true);
    }

    private void printTickets() {

        try {
            JPrintTicket printTicket = new JPrintTicket(reparacion);
            this.app.dskMain.add(printTicket);
            Dimension desktopSize = this.app.dskMain.getSize();
            Dimension FrameSize = printTicket.getSize();
            printTicket.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
            printTicket.show();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

}
